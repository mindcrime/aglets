<?xml version="1.0"?>

<!--
    Build Script for Aglets Software Development Kit (ASDK)
-->
<project name="Aglets" default="all" basedir=".">

  <!-- 
    Build Properties 
  -->
  <property name="pkgname" value="aglets"/>
  <property name="version" value="devel"/>
  
  <property name="src.dir" location="."/>
  
  <!-- Dependent Libraries and compiled classes -->
  <property name="lib.dir" location="../lib"/>
  <property name="lib.classes.dir" location="../lib/classes"/>
  
  <!-- Configuration source directory -->
  <property name="cnf.dir" location="../cnf"/>
  
  <!-- directory for API docs -->
  <property name="doc.api.dir" location="../doc/api/"/>
  
  <!-- Directory holding user aglets. -->
  <property name="public.dir" location="../public"/>
  
  <!-- Use Java 2 compiler -->
  <property name="build.compiler" value="modern" />
  
  <!-- Quiet the warnings of Ant 1.8+ -->
  <property name="build.sysclasspath" value="last" />
  
  <!-- 
    Project classpath.  Imports sytem classpath and
    then adds all jar files found in the lib
    directory.
  -->
  <path id="project.classpath">
    <pathelement path="${classpath}"/>
    
    <fileset dir="${lib.dir}">
        <include name="*.jar"/>
    </fileset>
  </path>
  
  <!--
    Same as project.classpath with project classes
    inlcuded.
  -->
  <path id="app.classpath">
     <pathelement path="${lib.classes.dir}"/>
     <path refid="project.classpath"/>
  </path>
  
  <!-- Top level target.  Redirect to all-release -->
  <target name="all" depends="all-release"/>
  
  <!--
    Top level target.  Builds java files with 
    deprecation off and optimization on.
  -->
  <target name="all-release" depends="release-flags,lib,stubs,jar,public,examples,doc"/> 
  
  <!--
    Top level target.  Builds java files with 
    deprecation on and optimization off.
  -->
  <target name="all-dev" depends="dev-flags,lib,stubs,jar,public,doc"/>
  
  <!--
    Top level target.  Builds java files with 
    development settings.  No jar or examples.
  -->
  <target name="dev" depends="dev-flags,lib,stubs,public"/>
  
  <!-- Set flags for compiler (Dev) -->
  <target name="dev-flags">
    <property name="dep.flag" value="on"/>
    <property name="debug.flag" value="on"/>
    <property name="opt.flag" value="off"/>
  </target>
  
  <!-- Set flags for compiler  (Release) -->
  <target name="release-flags">
    <property name="dep.flag" value="off"/>
    <property name="debug.flag" value="off"/>
    <property name="opt.flag" value="on"/>
  </target>
  
  <!-- 
    Initialize build. Displays a header for the output.
    Provides a placeholder for any tasks that always need to be carried out.
    Any target that does not depend on another target and does more than
    just set some properties should depend on this target.
  -->
  <target name="init" >
    <echo>
Aglets SDK Build ${version}
    </echo>
  </target>
  
  <!-- Compile the ASDK java files -->
  <target name="lib" depends="init">
    <mkdir dir="${lib.classes.dir}" />
    <javac srcdir="${src.dir}"
           destdir="${lib.classes.dir}"
           classpathref="project.classpath"
           debug="${debug.flag}"
           deprecation="${dep.flag}"
           optimize="${opt.flag}" >
      <include name="com/ibm/**/*.java"/>
      <!-- the one below is built by target 'public' -->
      <exclude name="com/ibm/agletx/**/*.java"/>
      <include name="net/sourceforge/aglets/**/*.java" />
      <!-- the one below is built by target 'examples' -->
      <exclude name="net/sourceforge/aglets/examples/**/*.java" />
    </javac>
  </target>

  <!-- Build RMI stubs -->
  <target name="stubs" depends="lib">
    <rmic base="${lib.classes.dir}"
          includes="com/ibm/maf/rmi/*_RMIImpl.class"/>
  </target>

  
  <!-- Build the helper classes not part of the core. -->
  <target name="public" depends="init">
    <mkdir dir="${public.dir}" />
    <javac srcdir="${src.dir}"
           destdir="${public.dir}"
           debug="${debug.flag}"
           deprecation="${dep.flag}"
           optimize="${opt.flag}" >
      <classpath>
        <path refid="app.classpath"/>
      </classpath>
      <include name="com/ibm/agletx/**/*.java"/>
    </javac>
  </target>

  <!-- Build the example aglets -->
  <target name="examples" depends="init">
    <mkdir dir="${public.dir}" />
    <javac srcdir="${src.dir}"
           destdir="${public.dir}"
           debug="${debug.flag}"
           deprecation="${dep.flag}"
           optimize="${opt.flag}" >
      <classpath>
        <path refid="app.classpath"/>
      </classpath>
      <include name="net/sourceforge/aglets/examples/**/*.java"/>
    </javac>
  </target>

  <!--
    Build the ASDK jar file
  -->
  <target name="jar" depends="lib">
    <jar jarfile="${lib.dir}/${pkgname}-${version}.jar">
         <fileset dir="${lib.classes.dir}">
            <include name="com/ibm/**/*.class"/>
            <include name="net/sourceforge/aglets/**/*.class" />
         </fileset>
    </jar>
  </target>
    
  <!-- Build API docs from source code. -->
  <target name="doc" depends="init">
      <javadoc
          sourcepath="${src.dir}"
          destdir="${doc.api.dir}"
          classpathref="project.classpath"
          author="true"
          version="true"
          use="true"
          private="yes"
          windowtitle="Aglets Development Kit"
          doctitle="&lt;h1&gt;Aglets Development Kit&lt;/h1&gt;">
      </javadoc>
  </target>
  
  <!-- Prepares a binary archive of the ASDK -->
  <target name="package" depends="clean-all,dev-flags,jar,examples,public,doc">
    <zip destfile="../${pkgname}-${version}.zip">
      <zipfileset dir=".." prefix="${pkgname}-${version}">
       <include name="bin/**" />
        <include name="cnf/**" />
        <include name="doc/**" />
        <include name="img/**" />
        <include name="lib/**" />
        <exclude name="lib/classes/**" />
        <include name="public/**" />
        <include name="IBM-Public-License.txt" />
        <include name="README.html" />
      </zipfileset>
    </zip>
    <echo>For a public release, assign an appropriate value to the 'version'
property in the 'src/build.xml' file and launch 'ant package'.</echo>
  </target>
  
  <!-- Cleans the tree of all generated files. -->
  <target name="clean-all" depends="init">
    <delete dir="${doc.api.dir}" />
    <delete dir="${lib.classes.dir}" />
    <delete dir="${public.dir}" />
    <delete file="${lib.dir}/${pkgname}-${version}.jar" />
    <delete file="../${pkgname}-${version}.zip" />
  </target>

</project>
